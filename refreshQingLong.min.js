async function refreshQingLong(userCookie,ckName){try{if(!$.isNode())return;let e=process.env.ql_port||"",n=process.env.ql_client_id||"",t=process.env.ql_client_secret||"",o=await loadQingLong({host:`http://127.0.0.1:${e}`,clientId:n,secret:t});await o.checkLogin(),await o.getEnvs();let[i]=o.selectEnvByName(ckName);try{await o.updateEnv({value:$.toStr(userCookie),name:ckName,remarks:`${i?.remarks}`,id:`${i?.id}`})}catch(e){}}catch(e){}async function loadQingLong(QL){let code=$.getdata("qinglong_code")||"";return code&&Object.keys(code).length?($.info("[QingLong] 模块加载成功,请继续"),eval(code),new QingLong(QL.host,QL.clientId,QL.secret)):($.info("[QingLong] 开始安装模块..."),new Promise((async resolve=>{$.getScript("https://fastly.jsdelivr.net/gh/Sliverkiss/QuantumultX@main/Utils/QingLong.min.js").then((fn=>{$.setdata(fn,"qinglong_code"),eval(fn);const ql=new QingLong(QL.host,QL.clientId,QL.secret);$.info("[QingLong] 模块加载成功,请继续"),resolve(ql)}))})))}}
